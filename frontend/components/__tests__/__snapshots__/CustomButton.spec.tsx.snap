// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test CustomButton.tsx renders correctly with a custom background color and icon 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#6666ff",
      "borderRadius": 50,
      "flexDirection": "row",
      "height": 60,
      "justifyContent": "center",
      "minWidth": undefined,
      "opacity": 1,
      "padding": 15,
      "paddingHorizontal": 0,
      "width": 180,
    }
  }
>
  <Text
    allowFontScaling={false}
    selectable={false}
    style={
      [
        {
          "color": "#ECEDEE",
          "fontSize": 24,
        },
        undefined,
        {
          "fontFamily": "anticon",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        {},
      ]
    }
  >
    î˜–
  </Text>
  <Text
    style={
      [
        {
          "fontSize": 16,
          "marginLeft": 8,
        },
        {
          "color": "#ECEDEE",
        },
      ]
    }
  >
    Retake
  </Text>
</View>
`;

exports[`test CustomButton.tsx renders correctly with a different text color 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#755dd3",
      "borderRadius": 50,
      "flexDirection": "row",
      "height": 60,
      "justifyContent": "center",
      "minWidth": 150,
      "opacity": 1,
      "padding": 15,
      "paddingHorizontal": 20,
      "width": undefined,
    }
  }
>
  <Text
    style={
      [
        {
          "fontSize": 16,
          "marginLeft": 8,
        },
        {
          "color": "#ECEDEE",
        },
      ]
    }
  >
    Upload
  </Text>
</View>
`;

exports[`test CustomButton.tsx renders correctly with default props 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "alignItems": "center",
      "backgroundColor": "#6666ff",
      "borderRadius": 50,
      "flexDirection": "row",
      "height": 60,
      "justifyContent": "center",
      "minWidth": 150,
      "opacity": 1,
      "padding": 15,
      "paddingHorizontal": 20,
      "width": undefined,
    }
  }
>
  <Text
    style={
      [
        {
          "fontSize": 16,
          "marginLeft": 8,
        },
        {
          "color": "#ECEDEE",
        },
      ]
    }
  >
    Take a Photo
  </Text>
</View>
`;
